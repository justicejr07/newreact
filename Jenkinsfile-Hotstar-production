pipeline {
    agent any
    tools {
        jdk 'jdk17'
        nodejs 'node16'
    }
    environment {
        SCANNER_HOME = tool 'sonar-scanner'
    }
    stages {
        stage('Git Checkout') {
            steps {
                git branch: 'main', credentialsId: 'git-cred', url: 'https://github.com/justicejr07/newreact.git'
            }
        }
        stage('Install Dependencies') {
            steps {
                sh 'npm install'
            }
        }
        stage('Build & Tag Docker Image') {
            steps {
                script {
                    withDockerRegistry(credentialsId: 'docker-cred', toolName: 'docker') {
                        sh 'docker build -t justicejr/hotstart:latest .'
                    }
                }
            }
        }
        stage('Push Docker Image') {
            steps {
                script {
                    withDockerRegistry(credentialsId: 'docker-cred', toolName: 'docker') {
                        sh 'docker push justicejr/hotstart:latest'
                    }
                }
            }
        }
        stage('Deploy to Kubernetes') {
            steps {
                script {
                    dir('K8S') {
                        withKubeConfig(
                            caCertificate: '', 
                            clusterName: 'EKS_CLOUD', 
                            contextName: '', 
                            credentialsId: 'k8s-cred', 
                            namespace: '', 
                            restrictKubeConfigAccess: false, 
                            serverUrl: 'https://0F36E8B0D17ADCF87B35F967025782B6.gr7.us-east-1.eks.amazonaws.com'
                        ) {
                               sh 'kubectl apply -f deployment.yml --dry-run=client'
      
                            sh 'kubectl apply -f deployment.yml'
                            sh 'kubectl apply -f service.yml'
                        }
                    }
                }
            }
        }
    }
}
